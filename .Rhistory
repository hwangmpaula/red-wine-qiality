ggplot(data = df,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point() +
scale_y_continuous(limits=c(0.3,1.5)) +
scale_fill_gradient(low="lightblue",high="darkgreen")+
geom_smooth(method = 'lm',color = 'red')
m1 <- lm(I(log(quality)) - I(alcohol^(1/3)), data = df)
getwd()
setwd('C:\\Users\\Alexander Smith\\Desktop\\wine-data')
df <- read.csv('C:\\Users\\Alexander Smith\\Desktop\\Red_Wine\\wineQualityReds.csv')
library(ggplot2)
# Load the Data
dim(df)
# Load the Data
str(df)
summary(df)
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))
qplot(x = quality, data = df, binwidth = 1,colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_sqrt()
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_log10()
dim(df)
library(grid)
library(gridExtra)
p1 <- qplot(x = volatile.acidity,data = df)
p2 <- qplot(x = residual.sugar,data = df)
p3 <- qplot(x = free.sulfur.dioxide, data = df)
scale_x_continuous(breaks = seq(0, 50, 5))
p4 <- qplot(x = density, data = df) +
scale_y_continuous(breaks = seq(0, 200, 30))
p5 <- qplot(x = sulphates, data = df)
p6 <-qplot(x = fixed.acidity, data = df)
p7 <- qplot(x = citric.acid, data = df)
p8 <- qplot(x = chlorides, data = df)
p9 <- qplot(x = total.sulfur.dioxide, data = df)
p10 <- qplot(x = pH, data = df)
p11 <- qplot(x = alcohol, data = df)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol = 3)
library('GGally')
library('scales')
library('memisc')
library("lattice")
#I'm going to ggpairs 13 columns
ggpairs(df, columns = 2:13)
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = density, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.985, 1.0))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'density(g/cm^3)',
title= "Alcohol Vs density")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = citric.acid, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1.0))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'citric acid',
title= "ph Vs citric acid")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = citric.acid, y = density, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.985, 1.02))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'citric acid',
y = 'density(g/cm^3)',
title= "Citric Acid Vs Density")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = pH, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.5, 5))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'fixed.acidity',
y = 'pH',
title= "Fixed Acidity Vs. pH")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = citric.acid, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Fixed Acidity',
y = 'Citric Acid',
title= "Fixed Acidity Vs. Citric Acid")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Fixed Acidity',
y = 'Volatile Acidity',
title= "Fixed Acidity Vs. Volatile Acidity")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'Volatile Acidity',
title= "pH Vs. Volatile Acidity")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = density, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Density',
y = 'Volatile Acidity',
title= "Density Vs. Volatile Acidity")
#negative:
cor.test(df$pH, df$density, method = 'pearson')
cor.test(df$pH, df$citric.acid, method = 'pearson')
cor.test(df$pH, df$fixed.acidity, method = 'pearson')
cor.test(df$fixed.acidity, df$volatile.acidity, method = 'pearson')
#positive:
cor.test(df$pH, df$volatile.acidity, method = 'pearson')
cor.test(df$density, df$citric.acid, method = 'pearson')
cor.test(df$pH, df$volatile.acidity, method = 'pearson')
ggcorr(df,
method= c("all.obs", "spearman"),
nbreaks = 4, label = TRUE,
name = "Spearman Correlation Coeff Matrix",
hjust= 0.8, angle = -70, size = 5)+
ggtitle("Spearman Correlation coefficient Matrix")
Q_A<- ggplot(data = df, aes(x= factor(quality), y = alcohol))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'Alcohol (% by volume)',
title = 'Boxplot of alcohol across qualities')
Q_S <- ggplot(data = df, aes(x= factor(quality), y = sulphates))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'sulphates (potassium sulphate - g / dm3)',
title = 'Boxplot of sulphates across qualities')
Q_C <- ggplot(data = df, aes(x= factor(quality), y = citric.acid))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'citric acid (g / dm^3)',
title = 'Boxplot of Citric Acid across qualities')
Q_FA <- ggplot(data = df, aes(x= factor(quality), y = fixed.acidity))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'fixed acidity (tartaric acid - g / dm^3)',
title = 'Boxplot of Fixed Acidity across qualities')
Q_VA <- ggplot(data = df, aes(x= factor(quality), y = volatile.acidity))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'volatile acidity (acetic acid - g / dm^3)',
title = 'Boxplot of Volitle Acidity across qualities')
Q_P <- ggplot(data = df, aes(x= factor(quality), y = pH))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'pH',
title = 'Boxplot of pH across qualities')
Q_D <- ggplot(data = df, aes(x= factor(quality), y = density))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'density (g / cm^3)',
title = 'Boxplot of density across qualities')
Q_TSD <- ggplot(data = df, aes(x= factor(quality), y = total.sulfur.dioxide))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'total sulfur dioxide (mg / dm^3)',
title = 'Boxplot of total sulfur dioxide across qualities')
Q_RS <- ggplot(data = df, aes(x= factor(quality), y = df$residual.sugar))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'residual sugar (g / dm^3)',
title = 'Boxplot of residual sugar across qualities')
grid.arrange(Q_A,Q_S,Q_C,Q_FA,Q_VA,Q_P,Q_D,Q_TSD,Q_RS,ncol = 3)
library(tidyr)
library(ggthemes)
library(reshape2)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3), inverse = function(x) x^3)
ggplot(data = df, aes(y = density, x = alcohol, color = quality)) +
geom_point() +
scale_fill_gradient(low="lightblue",high="darkgreen")+
geom_smooth(method = 'lm',color = 'red')
ggplot(data = df,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point() +
scale_y_continuous(limits=c(0.3,1.5)) +
scale_fill_gradient(low="lightblue",high="darkgreen")+
geom_smooth(method = 'lm',color = 'red')
m1 <- lm(I(log(quality)) - I(alcohol^(1/3)), data = df)
m1 <- lm(I(log(quality)) ~ I(alcohol^(1/3)), data = df)
m1 <- lm(I(log10(quality)) ~ I(alcohol^(1/3)), data = df)
m1 <- lm(I(log(quality)) ~ I(alcohol(exp(3))), data = df)
m1 <- lm(I(log(quality)) ~ I(alcohol(exp(3))), data = df)
ggplot(aes(x = density(), y = quality), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = density, y = quality), data = df) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
getwd()
setwd('C:\\Users\\Alexander Smith\\Desktop\\wine-data')
df <- read.csv('C:\\Users\\Alexander Smith\\Desktop\\Red_Wine\\wineQualityReds.csv')
library(ggplot2)
# Load the Data
dim(df)
# Load the Data
str(df)
summary(df)
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))
qplot(x = quality, data = df, binwidth = 1,colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_sqrt()
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_log10()
dim(df)
library(grid)
library(gridExtra)
p1 <- qplot(x = volatile.acidity,data = df)
p2 <- qplot(x = residual.sugar,data = df)
p3 <- qplot(x = free.sulfur.dioxide, data = df)
scale_x_continuous(breaks = seq(0, 50, 5))
p4 <- qplot(x = density, data = df) +
scale_y_continuous(breaks = seq(0, 200, 30))
p5 <- qplot(x = sulphates, data = df)
p6 <-qplot(x = fixed.acidity, data = df)
p7 <- qplot(x = citric.acid, data = df)
p8 <- qplot(x = chlorides, data = df)
p9 <- qplot(x = total.sulfur.dioxide, data = df)
p10 <- qplot(x = pH, data = df)
p11 <- qplot(x = alcohol, data = df)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol = 3)
library('GGally')
library('scales')
library('memisc')
library("lattice")
#I'm going to ggpairs 13 columns
ggpairs(df, columns = 2:13)
getwd()
setwd('C:\\Users\\Alexander Smith\\Desktop\\wine-data')
df <- read.csv('C:\\Users\\Alexander Smith\\Desktop\\Red_Wine\\wineQualityReds.csv')
library(ggplot2)
# Load the Data
dim(df)
# Load the Data
str(df)
summary(df)
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))
qplot(x = quality, data = df, binwidth = 1,colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_sqrt()
qplot(x = quality, data = df, binwidth = 1, colour=I("black"), fill = I("lightblue")) +
scale_x_continuous(breaks = seq(0,10,1), limits = c(0,10))+
scale_y_log10()
dim(df)
library(grid)
library(gridExtra)
p1 <- qplot(x = volatile.acidity,data = df)
p2 <- qplot(x = residual.sugar,data = df)
p3 <- qplot(x = free.sulfur.dioxide, data = df)
scale_x_continuous(breaks = seq(0, 50, 5))
p4 <- qplot(x = density, data = df) +
scale_y_continuous(breaks = seq(0, 200, 30))
p5 <- qplot(x = sulphates, data = df)
p6 <-qplot(x = fixed.acidity, data = df)
p7 <- qplot(x = citric.acid, data = df)
p8 <- qplot(x = chlorides, data = df)
p9 <- qplot(x = total.sulfur.dioxide, data = df)
p10 <- qplot(x = pH, data = df)
p11 <- qplot(x = alcohol, data = df)
grid.arrange(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, ncol = 3)
library('GGally')
library('scales')
library('memisc')
library("lattice")
#I'm going to ggpairs 13 columns
ggpairs(df, columns = 2:13)
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = density, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.985, 1.0))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'density(g/cm^3)',
title= "Alcohol Vs density")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = citric.acid, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1.0))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'citric acid',
title= "ph Vs citric acid")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = citric.acid, y = density, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.985, 1.02))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'citric acid',
y = 'density(g/cm^3)',
title= "Citric Acid Vs Density")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = pH, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.5, 5))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'fixed.acidity',
y = 'pH',
title= "Fixed Acidity Vs. pH")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = citric.acid, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Fixed Acidity',
y = 'Citric Acid',
title= "Fixed Acidity Vs. Citric Acid")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = fixed.acidity, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Fixed Acidity',
y = 'Volatile Acidity',
title= "Fixed Acidity Vs. Volatile Acidity")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = pH, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'pH',
y = 'Volatile Acidity',
title= "pH Vs. Volatile Acidity")
df$quality <- factor(df$quality)
ggplot(data = df, aes(x = density, y = volatile.acidity, color = quality))+
geom_jitter()+
coord_cartesian(ylim = c(0.0, 1))+
scale_color_brewer(type= 'seq')+
geom_smooth(method = 'lm',color = 'red')+
theme_dark() +
labs(x = 'Density',
y = 'Volatile Acidity',
title= "Density Vs. Volatile Acidity")
#negative:
cor.test(df$pH, df$density, method = 'pearson')
cor.test(df$pH, df$citric.acid, method = 'pearson')
cor.test(df$pH, df$fixed.acidity, method = 'pearson')
cor.test(df$fixed.acidity, df$volatile.acidity, method = 'pearson')
#positive:
cor.test(df$pH, df$volatile.acidity, method = 'pearson')
cor.test(df$density, df$citric.acid, method = 'pearson')
cor.test(df$pH, df$volatile.acidity, method = 'pearson')
ggcorr(df,
method= c("all.obs", "spearman"),
nbreaks = 4, label = TRUE,
name = "Spearman Correlation Coeff Matrix",
hjust= 0.8, angle = -70, size = 5)+
ggtitle("Spearman Correlation coefficient Matrix")
Q_A<- ggplot(data = df, aes(x= factor(quality), y = alcohol))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'Alcohol (% by volume)',
title = 'Boxplot of alcohol across qualities')
Q_S <- ggplot(data = df, aes(x= factor(quality), y = sulphates))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'sulphates (potassium sulphate - g / dm3)',
title = 'Boxplot of sulphates across qualities')
Q_C <- ggplot(data = df, aes(x= factor(quality), y = citric.acid))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'citric acid (g / dm^3)',
title = 'Boxplot of Citric Acid across qualities')
Q_FA <- ggplot(data = df, aes(x= factor(quality), y = fixed.acidity))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'fixed acidity (tartaric acid - g / dm^3)',
title = 'Boxplot of Fixed Acidity across qualities')
Q_VA <- ggplot(data = df, aes(x= factor(quality), y = volatile.acidity))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'volatile acidity (acetic acid - g / dm^3)',
title = 'Boxplot of Volitle Acidity across qualities')
Q_P <- ggplot(data = df, aes(x= factor(quality), y = pH))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'pH',
title = 'Boxplot of pH across qualities')
Q_D <- ggplot(data = df, aes(x= factor(quality), y = density))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'density (g / cm^3)',
title = 'Boxplot of density across qualities')
Q_TSD <- ggplot(data = df, aes(x= factor(quality), y = total.sulfur.dioxide))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'total sulfur dioxide (mg / dm^3)',
title = 'Boxplot of total sulfur dioxide across qualities')
Q_RS <- ggplot(data = df, aes(x= factor(quality), y = df$residual.sugar))+
geom_jitter(alpha = 1/10)+
geom_boxplot(alpha = 1/10, color = 'blue')+
stat_summary(fun.y = 'mean', geom = 'point', color = 'red')+
labs(x = 'Quality (score between 3 and 9)',
y = 'residual sugar (g / dm^3)',
title = 'Boxplot of residual sugar across qualities')
grid.arrange(Q_A,Q_S,Q_C,Q_FA,Q_VA,Q_P,Q_D,Q_TSD,Q_RS,ncol = 3)
library(tidyr)
library(ggthemes)
library(reshape2)
library(RColorBrewer)
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3), inverse = function(x) x^3)
ggplot(data = df, aes(y = density, x = alcohol, color = quality)) +
geom_point() +
scale_fill_gradient(low="lightblue",high="darkgreen")+
geom_smooth(method = 'lm',color = 'red')
ggplot(data = df,
aes(y = sulphates, x = alcohol,
color = quality)) +
geom_point() +
scale_y_continuous(limits=c(0.3,1.5)) +
scale_fill_gradient(low="lightblue",high="darkgreen")+
geom_smooth(method = 'lm',color = 'red')
ggplot(aes(x = density, y = quality), data = df) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
